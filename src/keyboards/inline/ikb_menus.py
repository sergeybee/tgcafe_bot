from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.callback_data import CallbackData

from src.utils.db.dbase import DataBase
from src.config import load_config

config = load_config(".env")
db = DataBase(config.db.database, config.db.user, config.db.password, config.db.host)

menu_cd = CallbackData("show_menu", "level", "category_id", "item_id")
buy_item_cd = CallbackData("buy", "item_id")
incr_decr_btn = CallbackData("amount_item", "action")


def make_callback_data(level, category_id="0", item_id="0"):
    return menu_cd.new(level=level, category_id=category_id, item_id=item_id)


# LEVEL 1 - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏. Inline –∫–Ω–æ–ø–∫–∏ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (–ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –ú–µ–Ω—é)
def ikb_categories():
    CURRENT_LEVEL = 1
    markup = InlineKeyboardMarkup()
    categories = db.get_categories()
    for category_id, name in categories:

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        btn_name = f"{name}"

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–ª–±–µ–∫ –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ. –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å - —Ç–µ–∫—É—â–∏–π + 1, –∏ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1, category_id=category_id)
        markup.add(InlineKeyboardButton(text=btn_name, callback_data=callback_data))

    return markup


# LEVEL 2 - –ü—Ä–æ–¥—É–∫—Ç—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. Inline –∫–Ω–æ–ø–∫–∏ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def ikb_products(category_id):
    CURRENT_LEVEL = 2

    products = db.get_products(category_id)
    markup = InlineKeyboardMarkup()
    for item_id, name, price in products:
        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ
        btn_name = f"{name} {price} —Ä—É–±."

        # –°—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–æ–ª–±–µ–∫ –¥–∞—Ç—É, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –Ω–∞ –∫–Ω–æ–ø–∫–µ. –°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å - —Ç–µ–∫—É—â–∏–π + 1, –∏ –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        callback_data = make_callback_data(level=CURRENT_LEVEL + 1, item_id=item_id, category_id=category_id)
        markup.add(InlineKeyboardButton(text=btn_name, callback_data=callback_data))

    markup.row(InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=make_callback_data(level=CURRENT_LEVEL - 1)))
    return markup


# LEVEL 3 - –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞. Inline –∫–Ω–æ–ø–∫–∏ —É–≤–µ–ª–∏—á–µ–Ω–∏—è –∫–æ–ª-–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∏–ª–∏ –∫–æ—Ä–∑–∏–Ω–µ
def ikb_product(category_id, item_id):
    CURRENT_LEVEL = 3
    markup = InlineKeyboardMarkup()

    # –ö–Ω–æ–ø–∫–∏ –ø–ª—é—Å (+), –∫–æ–ª-–≤–æ —Ç–æ–≤–∞—Ä–∞ (0-100) –∏ –∫–Ω–æ–ø–∫–∞ –º–∏–Ω—É—Å (-)
    decr_btn = InlineKeyboardButton(text="-", callback_data=incr_decr_btn.new(action="decrease"))
    count_btn = InlineKeyboardButton(text="1", callback_data=incr_decr_btn.new(action="count"))
    incr_btn = InlineKeyboardButton(text="+", callback_data=incr_decr_btn.new(action="increase"))
    markup.row(decr_btn, count_btn, incr_btn)

    # –ö–Ω–æ–ø–∫–∞ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É"
    markup.row(InlineKeyboardButton(text=f"–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=buy_item_cd.new(item_id=item_id)))

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    markup.row(
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=make_callback_data(level=CURRENT_LEVEL - 1, category_id=category_id)))
    return markup


# def cart_menu():
#     btn_place = InlineKeyboardButton('–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑', callback_data=cart_cb.new('place_order'))  # + srt (sum)
#     '''
#     btn_left = InlineKeyboardButton('<', callback_data='left') # flipping
#     btn_quantity = InlineKeyboardButton('', callback_data='quantity') # to add pages
#     btn_right = InlineKeyboardButton('>', callback_data='right')
#     '''
#     btn_empty_cart = InlineKeyboardButton('–û—á–∏—Å—Ç–∏—Ç—å', callback_data=cart_cb.new('empty'))
#     btn_back_cart = InlineKeyboardButton('–ù–∞–∑–∞–¥ –∫ —Ç–æ–≤–∞—Ä–∞–º', callback_data=cart_cb.new('back_cart'))
#
#     markup_cart = InlineKeyboardMarkup(row_width=1)
#     markup_cart.add(btn_place, btn_empty_cart, btn_back_cart)
#
#     return markup_cart


# async def gen_products(data, user_id):
#     keyboard = InlineKeyboardMarkup()
#     for i in data:
#         count = await db.get_count_in_cart(user_id, i[1])
#         count = 0 if not count else sum(j[0] for j in count)
#         keyboard.add(InlineKeyboardButton(text=f'{i[2]}: {i[3]}p - {count}—à—Ç',
#                                           callback_data=f'btn:plus:{i[1]}:{i[5]}'))
#         keyboard.add(InlineKeyboardButton(text='üîΩ', callback_data=f'btn:minus:{i[1]}:{i[5]}'),
#                      InlineKeyboardButton(text='üîº', callback_data=f'btn:plus:{i[1]}:{i[5]}'),
#                      InlineKeyboardButton(text='‚ùå', callback_data=f'btn:del:{i[1]}:{i[5]}'))
#     keyboard.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=f'btn:back:-:-'))
#
#     return keyboard
